name: DevSecOps CI/CD Pipeline to Azure

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# ตั้งค่าสิทธิ์ที่จำเป็นทั้งหมด
# permissions:
#   contents: read
#   packages: write
#   pull-requests: write
#   actions: read

jobs:
  build_and_scan:
    name: Scan & Quality Gate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'app/package.json'

      # ติดตั้ง sonar-scanner globally เพื่อให้คำสั่ง npm run sonar ใช้งานได้
      - name: Install Global Sonar Scanner
        run: npm install -g sonar-scanner
          
      - name: Install App Dependencies
        run: npm install --prefix app

      # 1. รัน SonarQube Scan
      - name: SonarQube Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          # ใช้ sonar-scanner ที่ติดตั้งไว้ global
          sonar-scanner \
            -Dsonar.projectKey=zeemezeeyou_devsecops-solution \
            -Dsonar.organization=zeemezeeyou \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.sources=app

      - name: Delay to ensure Quality Gate Status is ready
        run: echo "Waiting for 30 seconds for SonarQube processing..." && sleep 30s
        
      # 2. Security Gate: ตรวจสอบ Quality Gate (ใช้ First-Party Action + Script)
      - name: Check SonarQube Quality Gate Status
        id: wait_and_check
        uses: actions/github-script@v7
        with:
          script: |
            const { checkQualityGate } = require('./.github/workflows/sonar-check-script.js');
            // ส่งค่า Secrets ไปให้ script ใช้โดยตรง
            await checkQualityGate({
              github, 
              core, 
              fetch,
              projectKey: 'kitthapat-j_devsecops-fullsolution'
            });
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}